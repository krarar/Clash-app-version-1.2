name: Deploy Clashy PWA to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Validate PWA files
      run: |
        echo "üîç Validating PWA files..."
        
        # Check if required files exist
        if [ ! -f "index.html" ]; then
          echo "‚ùå index.html not found"
          exit 1
        fi
        
        if [ ! -f "manifest.json" ]; then
          echo "‚ùå manifest.json not found"
          exit 1
        fi
        
        if [ ! -f "sw.js" ]; then
          echo "‚ùå sw.js not found"
          exit 1
        fi
        
        echo "‚úÖ All required PWA files found"
        
        # Validate manifest.json
        if ! python3 -m json.tool manifest.json > /dev/null; then
          echo "‚ùå Invalid manifest.json"
          exit 1
        fi
        
        echo "‚úÖ manifest.json is valid"
        
        # Check if HTML files are valid
        echo "üîç Checking HTML syntax..."
        
        # Basic HTML validation (check for basic structure)
        if ! grep -q "<!DOCTYPE html>" index.html; then
          echo "‚ùå index.html missing DOCTYPE"
          exit 1
        fi
        
        if ! grep -q "</html>" index.html; then
          echo "‚ùå index.html missing closing html tag"
          exit 1
        fi
        
        echo "‚úÖ HTML files validated"
        
    - name: Optimize files
      run: |
        echo "‚ö° Optimizing files for production..."
        
        # Create a production build directory
        mkdir -p build
        
        # Copy all files to build directory
        cp -r * build/ 2>/dev/null || true
        
        # Remove unnecessary files from build
        rm -rf build/.git
        rm -rf build/.github
        rm -rf build/node_modules
        rm -f build/package*.json
        rm -f build/README.md
        
        echo "‚úÖ Files optimized"
        
    - name: Setup Pages
      uses: actions/configure-pages@v3
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: ./
        
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v2
      
    - name: Verify deployment
      run: |
        echo "üöÄ Deployment completed!"
        echo "üì± PWA URL: ${{ steps.deployment.outputs.page_url }}"
        echo "‚úÖ Clashy is now live!"
        
        # Test if the site is accessible (basic check)
        sleep 30  # Wait for deployment to be fully available
        
        if curl -s "${{ steps.deployment.outputs.page_url }}" > /dev/null; then
          echo "‚úÖ Site is accessible"
        else
          echo "‚ö†Ô∏è Site might still be deploying..."
        fi
        
    - name: Update PWA cache
      run: |
        echo "üîÑ PWA deployment completed"
        echo "The Service Worker will automatically update the cache"
        echo "Users will receive the new version on their next visit"
